{"version":3,"sources":["reducers/loginReducer.js","actions/type.js","styledComponents/formStyledComponent.js","component/login.jsx","reducers/signupReducer.js","component/signup.jsx","reducers/forgotPasswordReducer.js","component/forgotPassword.jsx","App.js","reducers/index.js","store/store.js","serviceWorker.js","index.js"],"names":["initialState","email","password","status","loginReducer","state","action","type","data","payload","FormHeader","styled","div","FormOptions","Input","input","Submit","Form","form","Login","dispatch","useDispatch","useState","setEmail","setPassword","id","onSubmit","e","preventDefault","value","placeholder","onChange","target","to","confirmPassword","signupReducer","Signup","setConfirmPassword","alert","forgotPasswordReducer","ForgotPassword","DivTitle","App","className","exact","path","combineReducers","store","createStore","rootReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c73fac3e.chunk.js","sourcesContent":["import { LOGIN_ACTION } from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  status: false,\r\n};\r\n\r\nexport function loginReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_ACTION:\r\n      const { data } = action.payload;\r\n      return {\r\n        ...state,\r\n        email: data.email,\r\n        password: data.password,\r\n        status: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","export const LOGIN_ACTION = \"LOGIN_ACTION\"\r\nexport const SIGNUP_ACTION = \"SIGNUP_ACTION\"\r\nexport const FORGOT_PASSWORD_ACTION = \"FORGOT_PASSWORD_ACTION\"","import styled from \"styled-components\";\r\n\r\nexport const FormHeader = styled.div`\r\n    font-size: x-large;\r\n    font-weight: bold;\r\n    padding: 12px 20px;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const FormOptions = styled.div`\r\n    font-size: small;\r\n    padding: 0px;\r\n    width: 80%;\r\n    margin: auto;\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    width: 80%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Submit = styled.input`\r\n    width : 25%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    margin: auto;\r\n    width: 50%;\r\n`;","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik } from 'formik';\r\n\r\nimport \"../login-signup.css\";\r\nimport { LOGIN_ACTION } from \"../actions/type\";\r\nimport { loginReducer } from \"../reducers/loginReducer\";\r\nimport {\r\n  FormHeader,\r\n  FormOptions,\r\n  Input,\r\n  Submit,\r\n  Form,\r\n} from \"../styledComponents/formStyledComponent\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch(loginReducer);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const data = { email, password };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: LOGIN_ACTION, payload: { data } });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form id=\"login\" onSubmit={onSubmit}>\r\n        <FormHeader>Login To Your Account</FormHeader>\r\n        <Input\r\n          type=\"email\"\r\n          value={email}\r\n          placeholder=\"Enter Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          value={password}\r\n          placeholder=\"Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <FormOptions>\r\n          <div id=\"signup-prompt\">\r\n            <Link to=\"/signup\">Don't have an account?</Link>\r\n          </div>\r\n          <div id=\"forgot-password\">\r\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n          </div>\r\n        </FormOptions>\r\n        <Submit type=\"submit\" value=\"Login\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { SIGNUP_ACTION } from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  status: false,\r\n};\r\n\r\nexport function signupReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SIGNUP_ACTION:\r\n      const { data } = action.payload;\r\n      return {\r\n        ...state,\r\n        email: data.email,\r\n        password: data.password,\r\n        confirmPassword: data.confirmPassword,\r\n        status: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { signupReducer } from \"../reducers/signupReducer\";\r\nimport { SIGNUP_ACTION } from \"../actions/type\";\r\nimport {\r\n  FormHeader,\r\n  FormOptions,\r\n  Input,\r\n  Submit,\r\n  Form,\r\n} from \"../styledComponents/formStyledComponent\";\r\nimport \"../login-signup.css\";\r\n\r\nexport default function Signup() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const dispatch = useDispatch(signupReducer);\r\n  const data = { email, password, confirmPassword };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password === confirmPassword) {\r\n      dispatch({ type: SIGNUP_ACTION, payload: { data } });\r\n    } else {\r\n      alert(\"Passwords dont match\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form id=\"signup\" onSubmit={onSubmit}>\r\n        <FormHeader>Make A New Account</FormHeader>\r\n        <Input\r\n          type=\"email\"\r\n          value={email}\r\n          placeholder=\"Enter Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          value={password}\r\n          placeholder=\"Enter Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          placeholder=\"Confirm Password\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n        <FormOptions>\r\n          <div id=\"signup-prompt\">\r\n            <Link to=\"/\">Already have an account?</Link>\r\n          </div>\r\n        </FormOptions>\r\n        <Submit type=\"submit\" value=\"Sign Up\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { FORGOT_PASSWORD_ACTION } from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  status: false,\r\n};\r\n\r\nexport function forgotPasswordReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FORGOT_PASSWORD_ACTION:\r\n      const { data } = action.payload;\r\n      return {\r\n        ...state,\r\n        email: data.email,\r\n        status: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../login-signup.css\";\r\nimport { FORGOT_PASSWORD_ACTION } from \"../actions/type\";\r\nimport { forgotPasswordReducer } from \"../reducers/forgotPasswordReducer\";\r\nimport {\r\n  FormHeader,\r\n  Input,\r\n  FormOptions,\r\n  Submit,\r\n  Form,\r\n} from \"../styledComponents/formStyledComponent\";\r\n\r\nexport default function ForgotPassword() {\r\n  const dispatch = useDispatch(forgotPasswordReducer);\r\n  const [email, setEmail] = useState(\"\");\r\n  const data = { email };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: FORGOT_PASSWORD_ACTION, payload: { data } });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form id=\"login\" onSubmit={onSubmit}>\r\n        <FormHeader>Reset Your Password</FormHeader>\r\n        <Input\r\n          type=\"email\"\r\n          value={email}\r\n          placeholder=\"Enter Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <FormOptions>\r\n          <div id=\"signup-prompt\">\r\n            <Link to=\"/\">Go back to Login</Link>\r\n          </div>\r\n        </FormOptions>\r\n        <Submit type=\"submit\" value=\"Reset Password\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Login from \"./component/login\";\r\nimport Signup from \"./component/signup\";\r\nimport ForgotPassword from \"./component/forgotPassword\";\r\nimport \"./App.css\";\r\n\r\nconst DivTitle = styled.div`\r\n  background-color: #e8f5ff;\r\n  padding: 10px;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DivTitle><h1>Login / Sign Up</h1></DivTitle>\r\n      <Switch>\r\n        <Route exact path=\"/signup\">\r\n          <Signup />\r\n        </Route>\r\n\r\n        <Route exact path=\"/forgot-password\">\r\n          <ForgotPassword />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Login />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { loginReducer } from \"./loginReducer\";\r\nimport { signupReducer } from './signupReducer'\r\nimport { combineReducers } from 'redux';\r\nimport { forgotPasswordReducer } from './forgotPasswordReducer'\r\nexport default combineReducers({\r\n    loginReducer,\r\n    signupReducer,\r\n    forgotPasswordReducer\r\n})","import { createStore, } from 'redux'\r\nimport rootReducer from '../reducers/index';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}